name: Hi Mascot
on: push
env:
  mascot: Mona
  super_duper_var: totally_awesome

jobs:
  windows_job:
    runs-on: windows-latest
    steps:
      - run: echo 'Hi ${{ env.mascot }}'  # Hi Mona
      - run: echo 'Hi ${{ env.mascot }}'  # Hi Octocat
        env:
          mascot: Octocat
  linux_job:
    runs-on: ubuntu-latest
    env:
      mascot: Tux
    steps:
      - run: echo 'Hi ${{ env.mascot }}'  # Hi Tux
on:
    workflow_dispatch:
  env:
    # Setting an environment variable with the value of a configuration variable
    env_var: ${{ vars.ENV_CONTEXT_VAR }}
  
  jobs:
    display-variables:
      name: ${{ vars.JOB_NAME }}
      # You can use configuration variables with the `vars` context for dynamic jobs
      if: ${{ vars.USE_VARIABLES == 'true' }}
      runs-on: ${{ vars.RUNNER }}
      environment: ${{ vars.ENVIRONMENT_STAGE }}
      steps:
      - name: Use variables
        run: |
          echo "repository variable : $REPOSITORY_VAR"
          echo "organization variable : $ORGANIZATION_VAR"
          echo "overridden variable : $OVERRIDE_VAR"
          echo "variable from shell environment : $env_var"
        env:
          REPOSITORY_VAR: ${{ vars.REPOSITORY_VAR }}
          ORGANIZATION_VAR: ${{ vars.ORGANIZATION_VAR }}
          OVERRIDE_VAR: ${{ vars.OVERRIDE_VAR }}
          
      - name: ${{ vars.HELLO_WORLD_STEP }}
        if: ${{ vars.HELLO_WORLD_ENABLED == 'true' }}
        uses: actions/hello-world-javascript-action@main
        with:
          who-to-greet: ${{ vars.GREET_NAME }}
  
          on:
            workflow_dispatch:
          env:
            # Setting an environment variable with the value of a configuration variable
            env_var: ${{ vars.ENV_CONTEXT_VAR }}
          
          jobs:
            display-variables:
              name: ${{ vars.JOB_NAME }}
              # You can use configuration variables with the `vars` context for dynamic jobs
              if: ${{ vars.USE_VARIABLES == 'true' }}
              runs-on: ${{ vars.RUNNER }}
              environment: ${{ vars.ENVIRONMENT_STAGE }}
              steps:
              - name: Use variables
                run: |
                  echo "repository variable : $REPOSITORY_VAR"
                  echo "organization variable : $ORGANIZATION_VAR"
                  echo "overridden variable : $OVERRIDE_VAR"
                  echo "variable from shell environment : $env_var"
                env:
                  REPOSITORY_VAR: ${{ vars.REPOSITORY_VAR }}
                  ORGANIZATION_VAR: ${{ vars.ORGANIZATION_VAR }}
                  OVERRIDE_VAR: ${{ vars.OVERRIDE_VAR }}
                  
              - name: ${{ vars.HELLO_WORLD_STEP }}
                if: ${{ vars.HELLO_WORLD_ENABLED == 'true' }}
                uses: actions/hello-world-javascript-action@main
                with:
                  who-to-greet: ${{ vars.GREET_NAME }}
          
          